---
  swagger: "2.0"
  info:
    version: "1.0.0"
    title: "Accounts"
    description: "Manage Billing Accounts"
    termsOfService: "https://cloud.s3it.uzh.ch/static/custom/UZH-AUP.html"
    contact:
      name: "University of Zurich - S3IT"
    license:
      name: "GPLv3"
  host: "accounting.s3it.uzh.ch"
  basePath: "/api"
  consumes:
    - "application/json"
  produces:
    - "application/json"
  paths:
    /groups:
      get:
        description: Return the gid of a specific group
        x-swagger-router-controller: api.group
        operationId: get_group_id
        parameters:
          - name: group
            in: query
            description: name of the group
            required: true
            type: string
        responses:
          200:
            description: The gid of the group
            schema:
              type: integer
          401:
            description: Not authorized
          404:
            description: Group does not exist
      post:
        description: Creates a new group, duplicates are not allowed
        x-swagger-router-controller: api.group
        operationId: add_group
        parameters:
          - name: group
            in: body
            required: true
            schema:
              $ref: "#/definitions/Group"
        responses:
          201:
            description: Group response
          403:
            description: User is not a group administrator
          500:
            description: Conflicting state during update
      put:
        description: Update an existing group
        x-swagger-router-controller: api.group
        operationId: update_group
        parameters:
          - name: gid
            in: query
            decription: Group id of the group that needs updating
            required: true
            type: integer
            format: int32
          - name: group
            in: body
            required: true
            schema:
              $ref: "#/definitions/Group"
        responses:
          201:
            description: Group response
          401:
            description: Not authorized
          500:
            description: Conflict during update
    /users/:
      get:
        description: Return users of a group
        x-swagger-router-controller: api.group
        operationId: get_group_users
        parameters:
          - name: name
            in: body
            description: group name
            required: true
            type: string
        responses:
          "200":
            description: The group's users
            schema:
              type: "array"
              items:
                $ref: '#/definitions/GroupUser'
          404:
            description: Group does not exist
      post:
        description: Add user to a group
        x-swagger-router-controller: api.group
        operationId: add_group_user
        parameters:
          - name: group
            in: body
            description: Target group
            required: true
            type: string
          - name: user
            in: body
            description: Target user
            required: true
            type: string
          - name: admin
            in: query
            description: Mark user as group admin
            required: false
            type: boolean
        responses:
          201:
            description: The user has been added
          401:
            description: Not authorized
          404:
            description: Group does not exist
          500:
            description: Conflict during add
      delete:
        description: Remove user from a group
        x-swagger-router-controller: api.group
        operationId: remove_group_user
        parameters:
          - name: group
            in: body
            description: Target group
            required: true
            type: string
          - name: user
            in: body
            description: Target user
            required: true
            type: string
        responses:
          200:
            description: The user has been removed
          401:
            description: Not authorized
          404:
            description: Group does not exist
          500:
            description: Conflict during remove
    /user/groups:
      get:
        description: Returns all groups from the system that the user is associated with
        x-swagger-router-controller: user.group
        operationId: find_group
        parameters:
          - name: admin
            in: query
            description: only return groups where the user is administrator
            required: false
            type: boolean
        responses:
          200:
            description: A list of groups the user is associated with
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Group"
          404:
            description: User does not exist
    /user:
      get:
        description: Return user profile
        x-swagger-router-controller: api.user
        operationId: get_user
        responses:
          200:
            description: Profile information for a user
            schema:
              $ref: '#/definitions/User'
          404:
            description: User not found
      post:
        description: Create user profile
        x-swagger-router-controller: api.user
        operationId: add_user
        parameters:
          - name: user
            in: body
            description: User to be added
            required: true
            schema:
              $ref: "#/definitions/User"
        responses:
          201:
            description: Profile information for a user
          401:
            description: Not authorized
          500:
            description: Conflict during create
  definitions:
    Group:
      type: object
      required:
        - name
        - owner
        - active
      properties:
        name:
          type: string
        owner:
          type: string
        active:
          type: boolean
    Owner:
      type: object
      required:
        - dom_name
      properties:
        dom_name:
          type: string
        address:
          type: string
        postal_code:
          type: string
        city:
          type: string
        country:
          type: string
    User:
      type: object
      required:
        - dom_name
        - full_name
      properties:
        dom_name:
          type: string
        full_name:
          type: string
        seed:
          type: string
          readOnly: true
    GroupUser:
      type: object
      properties:
        dom_name:
          type: string
        full_name:
          type: string
        admin:
          type: boolean
