---
  swagger: '2.0'
  info:
    version: '0.1'
    title: Accounts
    description: Manage Accounts
    contact:
      name: University of Zurich - S3IT
    license:
      name: GPLv3
  basePath: /api/v1
  consumes:
    - application/json
  produces:
    - application/json
  paths:
    /admins:
      get:
        description: Get all admins
        x-swagger-router-controller: api.admin
        operationId: get_admins
        parameters:
          - name: limit
            in: query
            description: Limit amount of users returned
            required: false
            type: integer
            format: int32
        responses:
          200:
            description: List of all admins
            schema:
              type: array
              items:
                $ref: '#/definitions/User'
          401:
            description: Not authorized
      post:
        description: Assign user to admins
        x-swagger-router-controller: api.admin
        operationId: add_admin
        parameters:
          - name: name
            in: query
            description: Name of the user to be added to admins
            required: true
            type: string
        responses:
          201:
            description: User added to admins
          401:
            description: Not authorized
          404:
            description: User not found
          500:
            description: Conflict during add
      delete:
        description: Remove user to admins
        x-swagger-router-controller: api.admin
        operationId: remove_admin
        parameters:
          - name: name
            in: query
            description: Name of the user to be removed from admins
            required: true
            type: string
        responses:
          201:
            description: User removed from admins
          401:
            description: Not authorized
          404:
            description: User not found
          500:
            description: Conflict during remove
    /services:
      get:
        description: Get all service accounts
        x-swagger-router-controller: api.admin
        operationId: get_services
        parameters:
          - name: limit
            in: query
            description: Limit amount of services returned
            required: false
            type: integer
            format: int32
        responses:
          200:
            description: List of all services
            schema:
              type: array
              items:
                $ref: '#/definitions/Service'
          401:
            description: Not authorized
      post:
        description: Service to add
        x-swagger-router-controller: api.admin
        operationId: add_service
        parameters:
          - name: name
            in: query
            description: Service name
            required: true
            type: string
        responses:
          201:
            description: Service added
            schema:
              $ref: '#/definitions/Service'
          401:
            description: Not authorized
          500:
            description: Conflict during add
      delete:
        description: Remove service
        x-swagger-router-controller: api.admin
        operationId: remove_service
        parameters:
          - name: name
            in: query
            description: Service to be removed
            required: true
            type: string
        responses:
          201:
            description: Service removed
          401:
            description: Not authorized
          404:
            description: Service not found
          500:
            description: Conflict during remove
    /groups:
      get:
        description: Get all groups
        x-swagger-router-controller: api.group
        operationId: get_groups
        parameters:
          - name: active
            in: query
            description: Only show active groups
            required: false
            type: boolean
          - name: limit
            in: query
            description: Limit amount of groups returned
            required: false
            type: integer
            format: int32
        responses:
          200:
            description: All groups
            schema:
              type: array
              items:
                $ref: '#/definitions/Group'
          401:
            description: Not authorized
      post:
        description: Creates a new group, duplicate names are not allowed
        x-swagger-router-controller: api.group
        operationId: add_group
        parameters:
          - name: group
            in: body
            required: true
            schema:
              $ref: '#/definitions/Group'
        responses:
          201:
            description: Group response
          403:
            description: User is not a group administrator
          500:
            description: Conflicting state during update
      put:
        description: Update an existing group (cannot change the name)
        x-swagger-router-controller: api.group
        operationId: update_group
        parameters:
          - name: group
            in: body
            description: New group content
            required: true
            schema:
              $ref: '#/definitions/Group'
        responses:
          201:
            description: Group response
          401:
            description: Not authorized
          500:
            description: Conflict during update
    /group/users/:
      get:
        description: Return users of a group
        x-swagger-router-controller: api.group
        operationId: get_group_users
        parameters:
          - name: name
            in: query
            description: group name
            required: true
            type: string
        responses:
          200:
            description: Members of a group
            schema:
              type: array
              items:
                $ref: '#/definitions/Member'
          401:
            description: Not authorized
          404:
            description: Group does not exist
      post:
        description: Add user to a group
        x-swagger-router-controller: api.group
        operationId: add_group_user
        parameters:
          - name: group
            in: query
            description: Target group
            required: true
            type: string
          - name: user
            in: query
            description: Target user
            required: true
            type: string
          - name: admin
            in: query
            description: Mark user as group admin
            required: false
            type: boolean
        responses:
          201:
            description: The user has been added
          401:
            description: Not authorized
          404:
            description: Group does not exist
          500:
            description: Conflict during add
      delete:
        description: Remove user from a group
        x-swagger-router-controller: api.group
        operationId: remove_group_user
        parameters:
          - name: group
            in: query
            description: Target group
            required: true
            type: string
          - name: user
            in: query
            description: Target user
            required: true
            type: string
        responses:
          200:
            description: The user has been removed
          401:
            description: Not authorized
          404:
            description: Group does not exist
          500:
            description: Conflict during remove
    /users:
      get:
        description: Get all users
        x-swagger-router-controller: api.user
        operationId: get_users
        parameters:
          - name: limit
            in: query
            description: Limit amount of users returned
            required: false
            type: integer
            format: int32
        responses:
          200:
            description: List of all users
            schema:
              type: array
              items:
                $ref: '#/definitions/User'
          401:
            description: Not authorized
      post:
        description: Create user
        x-swagger-router-controller: api.user
        operationId: add_user
        parameters:
          - name: user
            in: body
            description: User to be added
            required: true
            schema:
              $ref: '#/definitions/User'
        responses:
          201:
            description: Profile information for a user
          401:
            description: Not authorized
          500:
            description: Conflict during create
      delete:
        description: Remove user
        x-swagger-router-controller: api.user
        operationId: remove_user
        parameters:
          - name: name
            in: query
            description: User to be removed
            required: true
            type: string
        responses:
          200:
            description: User deleted
          401:
            description: Not authorized
          500:
            description: Conflict during create
    /user:
      get:
        description: Return current user profile
        x-swagger-router-controller: api.user
        operationId: get_user
        responses:
          200:
            description: Profile information for a user
            schema:
              $ref: '#/definitions/User'
          404:
            description: User not found
    /user/groups:
      get:
        description: Returns all groups from the system that the user is associated with
        x-swagger-router-controller: api.user
        operationId: find_groups
        parameters:
          - name: admin
            in: query
            description: Only return groups where the user is administrator
            required: false
            type: boolean
          - name: limit
            in: query
            description: Limit amount of groups returned
            required: false
            type: integer
            format: int32
        responses:
          200:
            description: A list of groups the user is associated with
            schema:
              type: array
              items:
                $ref: '#/definitions/Group'
          404:
            description: User does not exist
    /service/login:
      post:
        description: Validate user credentials
        x-swagger-router-controller: api.service
        operationId: login
        parameters:
          - name: name
            in: query
            description: name of the user
            required: true
            type: string
          - name: otp
            in: query
            description: one time password
            required: true
            type: string
        responses:
          200:
            description: User name
            schema:
              type: string
          401:
            description: Not authorized
          404:
            description: User not found
    /service/group:
      get:
        description: Return the gid of a specific group
        x-swagger-router-controller: api.service
        operationId: get_group_id
        parameters:
          - name: group
            in: query
            description: name of the group
            required: true
            type: string
        responses:
          200:
            description: The gid of the group
            schema:
              type: integer
              format: int32
          401:
            description: Not authorized
          404:
            description: Group does not exist
    /service/user:
      get:
        description: Return the uid of a specific user
        x-swagger-router-controller: api.service
        operationId: get_user_id
        parameters:
          - name: user
            in: query
            description: name of the user
            required: true
            type: string
        responses:
          200:
            description: The uid of the group
            schema:
              type: integer
              format: int32
          401:
            description: Not authorized
          404:
            description: Group does not exist
  definitions:
    Group:
      type: object
      required:
        - name
        - owner
        - active
      properties:
        name:
          type: string
        owner:
          type: string
        active:
          type: boolean
    Owner:
      type: object
      required:
        - dom_name
      properties:
        dom_name:
          type: string
        address:
          type: string
        postal_code:
          type: string
        city:
          type: string
        country:
          type: string
    User:
      type: object
      required:
        - dom_name
        - full_name
      properties:
        dom_name:
          type: string
        full_name:
          type: string
        seed:
          type: string
          readOnly: true
        seed_img:
          type: string
          readOnly: true
    Member:
      type: object
      properties:
        dom_name:
          type: string
        full_name:
          type: string
        admin:
          type: boolean
    Service:
      type: object
      properties:
        name:
          type: string
        access:
          type: string
          readOnly: true
        secret:
          type: string
          readOnly: true
