---
  swagger: "2.0"
  info:
    version: "1.0.0"
    title: "Accounts"
    description: "Manage Billing Accounts"
    termsOfService: "https://cloud.s3it.uzh.ch/static/custom/UZH-AUP.html"
    contact:
      name: "University of Zurich - S3IT"
    license:
      name: "GPLv3"
  host: "accounting.s3it.uzh.ch"
  basePath: "/api"
  consumes:
    - "application/json"
  produces:
    - "application/json"
  paths:
    /accounts:
      get:
        description: Returns all accounts from the system that the user is associated with
        x-swagger-router-controller: api.account
        operationId: find_accounts
        parameters:
          - name: admin
            in: query
            description: only return accounts where the user is administrator
            required: false
            type: boolean
          - name: limit
            in: query
            description: maximum number of results to return
            required: false
            type: integer
            format: int32
        responses:
          200:
            description: A list of accounts the user is associated with
            schema:
              type: "array"
              items:
                $ref: "#/definitions/Account"
          404:
            description: User does not exist
      post:
        description: Creates a new account, duplicates are not allowed
        x-swagger-router-controller: api.account
        operationId: add_account
        parameters:
          - name: account
            in: body
            description: Account to be updated
            required: true
            schema:
              $ref: "#/definitions/Account"
        responses:
          201:
            description: Account response
            schema:
              $ref: "#/definitions/Account"
          403:
            description: User is not an account administrator
          500:
            description: Conflicting state during update
      put:
        description: Update an existing account
        x-swagger-router-controller: api.account
        operationId: update_account
        parameters:
          - name: account
            in: body
            description: Account to add to the store
            required: true
            schema:
              $ref: "#/definitions/Account"
        responses:
          201:
            description: Account response
            schema:
              $ref: "#/definitions/Account"
          401:
            description: Not authorized
          500:
            description: Conflict during create
    /accounts/{id}:
      get:
        description: Return users of an account
        x-swagger-router-controller: api.account
        operationId: get_account_users
        parameters:
          - $ref: '#/parameters/id'
        responses:
          200:
            description: The Account
            schema:
              type: "array"
              items:
                $ref: '#/definitions/User'
          404:
            description: Account does not exist
      post:
        description: Add user to an account
        x-swagger-router-controller: api.account
        operationId: add_account_user
        parameters:
          - $ref: '#/parameters/id'
          - name: user
            in: body
            description: Account to be updated
            required: true
            schema:
              $ref: "#/definitions/User"
          - name: admin
            in: query
            description: Mark user as account admin
            required: false
            type: boolean
        responses:
          201:
            description: The user has been added
          401:
            description: Not authorized
          404:
            description: Account does not exist
          500:
            description: Conflict during add
      delete:
        description: Remove user from an account
        x-swagger-router-controller: api.account
        operationId: remove_account_user
        parameters:
        - $ref: '#/parameters/id'
        - name: user
          in: body
          description: User to be removed
          required: true
          schema:
            $ref: "#/definitions/User"
        responses:
          200:
            description: The user has been removed
          401:
            description: Not authorized
          404:
            description: Account does not exist
          500:
            description: Conflict during remove
    /user:
      get:
        description: Return user profile
        x-swagger-router-controller: api.user
        operationId: get_user
        responses:
          200:
            description: Profile information for a user
            schema:
              $ref: '#/definitions/User'
          404:
            description: User not found
      post:
        description: Create user profile
        x-swagger-router-controller: api.user
        operationId: add_user
        parameters:
          - name: user
            in: body
            description: User to be added
            required: true
            schema:
              $ref: "#/definitions/User"
        responses:
          200:
            description: Profile information for a user
            schema:
              $ref: '#/definitions/User'
          401:
            description: Not authorized
          500:
            description: Conflict during create
  parameters:
    id:
      name: id
      description: The unique identifer for an Object (i.e. User, Account, etc)
      in: path
      type: string
      required: true
      pattern: "^[a-zA-Z0-9-]+$"
  definitions:
    Account:
      type: object
      required:
        - name
        - active
        - principle_investigator
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
        active:
          type: boolean
        principle_investigator:
          type: string
        faculty:
          type: string
        department:
          type: string
    User:
      type: object
      required:
        - dom_name
        - full_name
      properties:
        id:
          type: string
          readOnly: true
        dom_name:
          type: string
        full_name:
          type: string
        seed:
          type: string
          readOnly: true
